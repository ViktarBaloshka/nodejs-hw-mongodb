{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts book",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Contacts book docs"
  },
  "servers": [
    {
      "url": "http://localhost:3100"
    },
    {
      "url": "https://nodejs-hw-mongodb-b910.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts operations",
      "description": "Contacts operations"
    },
    {
      "name": "Get all contacts",
      "description": "Get all contacts"
    }
  ],
  "paths": {
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts operations"
        ],
        "summary": "Get contact by ID",
        "operationId": "getContactById",
        "description": "Get contact by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67f268c5ad9664d68c7dd259"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 67f268c5ad9664d68c7dd259!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "401": {
          "$ref": "../components/responses/401.yaml"
        },
        "tags": [
          "Contacts operations"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "contactType",
                  "userId"
                ],
                "parameters": {
                  "name": {
                    "description": "Name contact",
                    "type": "string",
                    "example": "Kateryna Kovalchuk",
                    "phoneNumber": {
                      "description": "Number phone",
                      "type": "string",
                      "example": "+380000000000"
                    },
                    "contactType": {
                      "description": "Type contact",
                      "type": "string",
                      "enum": [
                        "work",
                        "home",
                        "personal"
                      ]
                    },
                    "userId": {
                      "description": "User logged ID",
                      "type": "string",
                      "example": "67e3b848b37d9050e8a0d3d4"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Get all contacts"
        ],
        "summary": "Get all contacts in logged user",
        "operationId": "getAllContacts",
        "description": "Get all contacts in logged user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "default": 1,
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "number",
              "default": null,
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc",
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "home"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "perPage": {
                          "type": "number",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 20
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 5
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "email",
          "isFavourite",
          "contactType",
          "photo"
        ],
        "properties": {
          "_id": {
            "description": "Contact's id",
            "type": "string",
            "example": "67f268c5ad9664d68c7dd259"
          },
          "name": {
            "description": "Contact's name",
            "type": "string",
            "example": "Kateryna Kovalchuk"
          },
          "email": {
            "description": "Contact's email",
            "type": "string",
            "example": "email@mail.com"
          },
          "isFavourite": {
            "description": "Favourite contact",
            "type": "boolean",
            "example": false
          },
          "contactType": {
            "description": "Contact's type",
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ]
          },
          "photo": {
            "description": "Link to contact photo",
            "type": "string",
            "example": "https://res.cloudinary.com/dyvg7qouu/image/upload/v1743940461/tzv6iqmon1hdkrx1zcwd.jpg"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Session not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "data": {
                  "type": "object",
                  "example": "Access token expired"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "data": {
                  "type": "string",
                  "example": "Contact not found"
                }
              }
            }
          }
        }
      }
    }
  }
}